
package eu.glowacki.jaxws.client.composite.proxy;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.3
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "CompositeImplService", targetNamespace = "http://glowacki.eu/composite", wsdlLocation = "http://localhost:8080/composite?wsdl")
public class CompositeImplService
    extends Service
{

    private final static URL COMPOSITEIMPLSERVICE_WSDL_LOCATION;
    private final static WebServiceException COMPOSITEIMPLSERVICE_EXCEPTION;
    private final static QName COMPOSITEIMPLSERVICE_QNAME = new QName("http://glowacki.eu/composite", "CompositeImplService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8080/composite?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        COMPOSITEIMPLSERVICE_WSDL_LOCATION = url;
        COMPOSITEIMPLSERVICE_EXCEPTION = e;
    }

    public CompositeImplService() {
        super(__getWsdlLocation(), COMPOSITEIMPLSERVICE_QNAME);
    }

    public CompositeImplService(WebServiceFeature... features) {
        super(__getWsdlLocation(), COMPOSITEIMPLSERVICE_QNAME, features);
    }

    public CompositeImplService(URL wsdlLocation) {
        super(wsdlLocation, COMPOSITEIMPLSERVICE_QNAME);
    }

    public CompositeImplService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, COMPOSITEIMPLSERVICE_QNAME, features);
    }

    public CompositeImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CompositeImplService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns IComposite
     */
    @WebEndpoint(name = "ICompositePort")
    public IComposite getICompositePort() {
        return super.getPort(new QName("http://glowacki.eu/composite", "ICompositePort"), IComposite.class);
    }

    /**
     * 
     * @param features
     *     A list of {&#064;link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the &lt;code&gt;features&lt;/code&gt; parameter will have their default values.
     * @return
     *     returns IComposite
     */
    @WebEndpoint(name = "ICompositePort")
    public IComposite getICompositePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://glowacki.eu/composite", "ICompositePort"), IComposite.class, features);
    }

    private static URL __getWsdlLocation() {
        if (COMPOSITEIMPLSERVICE_EXCEPTION!= null) {
            throw COMPOSITEIMPLSERVICE_EXCEPTION;
        }
        return COMPOSITEIMPLSERVICE_WSDL_LOCATION;
    }

}
