
package eu.glowacki.jaxws.client.addressing.proxy;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.3
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "AddressingImplService", targetNamespace = "http://glowacki.eu/addressing", wsdlLocation = "http://localhost:8080/addressing?wsdl")
public class AddressingImplService
    extends Service
{

    private final static URL ADDRESSINGIMPLSERVICE_WSDL_LOCATION;
    private final static WebServiceException ADDRESSINGIMPLSERVICE_EXCEPTION;
    private final static QName ADDRESSINGIMPLSERVICE_QNAME = new QName("http://glowacki.eu/addressing", "AddressingImplService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8080/addressing?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        ADDRESSINGIMPLSERVICE_WSDL_LOCATION = url;
        ADDRESSINGIMPLSERVICE_EXCEPTION = e;
    }

    public AddressingImplService() {
        super(__getWsdlLocation(), ADDRESSINGIMPLSERVICE_QNAME);
    }

    public AddressingImplService(WebServiceFeature... features) {
        super(__getWsdlLocation(), ADDRESSINGIMPLSERVICE_QNAME, features);
    }

    public AddressingImplService(URL wsdlLocation) {
        super(wsdlLocation, ADDRESSINGIMPLSERVICE_QNAME);
    }

    public AddressingImplService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, ADDRESSINGIMPLSERVICE_QNAME, features);
    }

    public AddressingImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AddressingImplService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns IAddressing
     */
    @WebEndpoint(name = "IAddressingPort")
    public IAddressing getIAddressingPort() {
        return super.getPort(new QName("http://glowacki.eu/addressing", "IAddressingPort"), IAddressing.class);
    }

    /**
     * 
     * @param features
     *     A list of {&#064;link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the &lt;code&gt;features&lt;/code&gt; parameter will have their default values.
     * @return
     *     returns IAddressing
     */
    @WebEndpoint(name = "IAddressingPort")
    public IAddressing getIAddressingPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://glowacki.eu/addressing", "IAddressingPort"), IAddressing.class, features);
    }

    private static URL __getWsdlLocation() {
        if (ADDRESSINGIMPLSERVICE_EXCEPTION!= null) {
            throw ADDRESSINGIMPLSERVICE_EXCEPTION;
        }
        return ADDRESSINGIMPLSERVICE_WSDL_LOCATION;
    }

}
